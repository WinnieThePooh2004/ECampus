@inherits IndexPageBase<TData, TParameters>
@typeparam TData
@typeparam TParameters

@if (Data is null || EditEnabled is null)
{
    <p>
        <em>Loading...</em>
    </p>
    return;
}
@if (CreateLink is not null && (bool)EditEnabled)
{
    <p>
        <a href="@CreateLink">Create new</a>
    </p>
}
<table>
    <thead>
    <SearchTermsGroup OnBlur="RefreshData" SearchTerms="SearchTerms"/>
    <tr>
        @foreach (var header in TableHeaders)
        {
            <th onclick="@(() => OnTableHeaderClicked(header.propertyName))">
                @header.header
            </th>
        }
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Data.Data)
    {
        <tr>
            @foreach (var property in GetAllPropertiesValues(item))
            {
                <td>
                    @property
                </td>
            }
            <td>
                @if (EditLink is not null && (bool)EditEnabled)
                {
                    <a role="button" href="@($"{EditLink}/{item.Id}")" class="btn btn-info">Edit</a>
                    <text> | </text>
                }
                @foreach (var link in ActionLinks)
                {
                    <a role="button" href="@link.LinkSource(item)" class="btn btn-info">@link.LinkName</a>
                    <text> | </text>
                }
                @if ((bool)EditEnabled)
                {
                    <a role="button" class="btn btn-danger" onclick="@(() => Delete(item.Id))">Delete</a>
                }
            </td>
        </tr>
    }
    </tbody>
    <DataPageSelect TotalPages="Data.Metadata.MaxPageNumber" OnPageNumberChanged="@(PageNumberChanged)"/>
    <br/>
    <DataPageSizeSelect OnPageSizeChanged="@(PageSizeChanged)" PageSize="Parameters.PageSize"/>
</table>
@using ECampus.Domain.Enums
@using ECampus.Domain.DataTransferObjects
@using ECampus.Domain.Requests.Subject
@using ECampus.Domain.Responses.Subject
@inherits ModelEditForm<ECampus.Domain.DataTransferObjects.TeacherDto>
<div class="row">
    <div class="col-md-4">
        <EditForm EditContext="EditContext" OnValidSubmit="Submit">
            <FluentValidationValidator Validator="Validator"/>
            <ValidationSummary/>
            <p>
                <label class="form-label" for="@Model.FirstName">First name</label>
                <InputText class="form-control" @bind-Value="Model.FirstName"/>
                <ValidationMessage For="@(() => Model.FirstName)"/>
            </p>
            <p>
                <label class="form-label" for="@Model.LastName">Last name</label>
                <InputText class="form-control" @bind-Value="Model.LastName"/>
                <ValidationMessage For="@(() => Model.LastName)"/>
            </p>
            <p>
                <label class="form-label" for="@Model.ScienceDegree">Science Degree</label>
                <InputSelect class="form-select" TValue="ScienceDegree" @bind-Value="Model.ScienceDegree">
                    <option value="@ScienceDegree.Master">Master</option>
                    <option value="@ScienceDegree.PhD">PhD</option>
                </InputSelect>
            </p>
            <table style="width: 30%">
                <tr>
                    <th>
                        Name
                    </th>
                </tr>
            </table>
            <br/><br/>
            <MultipleItemsSelect TData="MultipleSubjectResponse" TParameters="SubjectParameters" SelectTo="Model.Subjects" OnChanged="@StateHasChanged"/>
            <button type="submit" class="btn btn-success">Save</button>
        </EditForm>
    </div>
</div>
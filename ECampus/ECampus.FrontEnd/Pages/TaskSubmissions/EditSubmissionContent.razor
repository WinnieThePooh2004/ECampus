@page "/editSubmission/{CourseTaskId:int}"

@if (_model is null)
{
    <p>
        <em>Loading...</em>
    </p>
    return;
}

<EditForm Model="_model" OnValidSubmit="Submit">
    <FluentValidationValidator Validator="Validator"/>
    <h2>Edit submission for task '@_model.CourseTask!.Name'</h2>
    @if (_model.IsMarked)
    {
        <label>Your points: @_model.TotalPoints/@_model.CourseTask.MaxPoints</label>
    }
    else
    {
        if (!string.IsNullOrEmpty(_model.SubmissionContent))
        {
            <label>Not marked yet</label>
        }
        else
        {
            if (_model.CourseTask.Deadline <= DateTime.Now)
            {
                <label>Time left:@((DateTime.Now - _model.CourseTask.Deadline).ToString(@"%d"))</label>
            }
            else
            {
                <label>Deadline was </label>
                <label>@((_model.CourseTask.Deadline - DateTime.Now).ToString(@"%d")) ago</label>
            }
        }
    }
    <h3>My submission:</h3>
    <ValidationMessage For="@(() => _model.SubmissionContent)"/>
    <InputTextArea class="active" @bind-Value="_model.SubmissionContent" />
    <br/>
    <button type="submit" class="btn btn-success">Save</button>
</EditForm>
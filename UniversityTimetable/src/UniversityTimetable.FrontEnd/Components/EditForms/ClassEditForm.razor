@inherits ModelEditForm<ClassDTO>
<div class="row">
    <div class="col-md-4">
        <EditForm Model="Model" on OnValidSubmit="Submit">
            <button type="submit" class="btn btn-success">Save</button>
            <FluentValidationValidator Validator="Validator" />
            <ValidationSummary />
            <div class="form-group">
                <label>Class type</label>
                <br />
                <InputSelect @bind-Value="Model.ClassType">
                    @foreach (var type in Enum.GetValues<ClassType>())
                    {
                        <option value="@type">@type</option>
                    }
                </InputSelect>
                <br />
                <label>Week dependency</label>
                <br />
                <InputSelect @bind-Value="Model.WeekDependency">
                    @foreach (var weekDependency in Enum.GetValues<WeekDependency>())
                    {
                        <option value="@weekDependency">@weekDependency</option>
                    }
                </InputSelect>
                <br />
                <br />
            </div>
            @if (TimetableMode != TimetableMode.Teacher)
            {
                <p>
                    <label for="@Model.TeacherId">Select teacher</label>
                </p>
                <SingleItemSelect TData="TeacherDTO" TParameters="TeacherParameters" PropertyNames="@(new(){ "First name", "Last name"})"
                              PropertiesToShow="@(new(){ t => t.FirstName, t => t.LastName })" @bind-SelectedId="Model.TeacherId" />
                <br />
            }
            @if (TimetableMode != TimetableMode.Auditory)
            {

                <p>
                    <label for="@Model.AuditoryId">Select auditory</label>
                </p>
                <SingleItemSelect TData="AuditoryDTO" TParameters="AuditoryParameters" PropertyNames="@(new(){ "Building", "Name" })"
                              PropertiesToShow=@(new(){ a => a.Building, a => a.Name }) @bind-SelectedId="Model.AuditoryId" />
                <br />
            }
            @if (TimetableMode != TimetableMode.Group)
            {
                <p>
                    <label for="@Model.GroupId">Select teacher</label>
                </p>
                <SingleItemSelect TData="GroupDTO" TParameters="GroupParameters" PropertyNames="@(new(){ "Name" })"
                              PropertiesToShow=@(new(){ s => s.Name }) @bind-SelectedId="Model.GroupId" />
                <br />
            }
            <p>
                <label for="@Model.SubjectId">Select teacher</label>
            </p>
            <SingleItemSelect TData="SubjectDTO" TParameters="SubjectParameters" PropertyNames="@(new(){ "Name" })"
                              PropertiesToShow=@(new(){ s => s.Name }) @bind-SelectedId="Model.SubjectId" />
            <br />
        </EditForm>
    </div>
</div>
@using UniversityTimetable.Shared.QueryParameters
@using Microsoft.AspNetCore.Components.Forms

<text>Page @("   ")</text>
@if (_pageNumber < QueryParameters.PagesInLine + 2)
{
    @foreach (var i in Enumerable.Range(1, Math.Min(QueryParameters.PagesInLine + 3, MaxPageNumber)))
    {
        <a onclick="@(async () => await PageNumberChanged(i))"><u>@i</u>@(" ")</a>
    }
    @if (MaxPageNumber > QueryParameters.PagesInLine)
    {
        <a onclick="@(async () => await PageNumberChanged(MaxPageNumber))">
            <u>@("...")@MaxPageNumber</u>
        </a>
    }
}
else if (_pageNumber >= MaxPageNumber - QueryParameters.PagesInLine - 1)
{
    <a onclick="@(async () => await PageNumberChanged(1))">1@("...")</a>
    @foreach (var i in Enumerable.Range(MaxPageNumber - QueryParameters.PagesInLine - 2, QueryParameters.PagesInLine + 3))
    {
        <a onclick="@(async () => await PageNumberChanged(i))"><u>@i</u>@(" ")</a>
    }
}
else
{
    <a onclick="@(async () => await PageNumberChanged(1))"><u>1@("...")</u></a>
    foreach (var i in Enumerable.Range(_pageNumber - QueryParameters.PagesInLine + 2, QueryParameters.PagesInLine + 2))
    {
        <a onclick="@(async () => await PageNumberChanged(i))"><u>@i</u>@(" ")</a>
    }
    <a onclick="@(async () => await PageNumberChanged(MaxPageNumber))">
        <u>@("...")@MaxPageNumber</u>
    </a>
}